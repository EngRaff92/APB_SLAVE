$date
	Tue Dec 14 23:58:40 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module apb_slave_controller $end
$var wire 1 ! g_clk $end
$var wire 32 " paddr [31:0] $end
$var wire 1 # pclk $end
$var wire 1 $ pclk_en $end
$var wire 1 % penable $end
$var wire 1 & prst $end
$var wire 1 ' psel $end
$var wire 32 ( pwdata [31:0] $end
$var wire 1 ) pwrite $end
$var wire 32 * write_enable_out [31:0] $end
$var wire 1 + rif_error_out $end
$var wire 32 , rif_data_out [31:0] $end
$var wire 8 - mem_int_addr [7:0] $end
$var wire 32 . mem_data_out [31:0] $end
$var wire 32 / data_3_out [31:0] $end
$var wire 32 0 data_2_out [31:0] $end
$var wire 32 1 data_1_out [31:0] $end
$var wire 2 2 address_selector [1:0] $end
$var reg 1 3 cnt $end
$var reg 32 4 data_status_1_in [31:0] $end
$var reg 32 5 data_status_2_in [31:0] $end
$var reg 32 6 data_status_3_in [31:0] $end
$var reg 32 7 prdata [31:0] $end
$var reg 1 8 pready $end
$var reg 1 9 pslverror $end
$var reg 2 : slv_cs [1:0] $end
$var reg 1 ; slv_wr_rd_en $end
$var reg 2 < cstate [1:0] $end
$var reg 2 = nstate [1:0] $end
$scope begin genblk1[0] $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope module u_apb_mem $end
$var wire 8 > maddr [7:0] $end
$var wire 1 & mem_ares $end
$var wire 1 ? mem_cs $end
$var wire 1 @ mem_ready $end
$var wire 1 ; mem_wr_en $end
$var wire 32 A mwdata [31:0] $end
$var reg 32 B mrdata [31:0] $end
$scope begin mem_rd_wr_logic $end
$scope begin init_memory $end
$scope begin $ivl_for_loop0 $end
$var integer 32 C i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_apb_rif $end
$var wire 32 D data_status_1 [31:0] $end
$var wire 32 E data_status_1_in [31:0] $end
$var wire 32 F data_status_2 [31:0] $end
$var wire 32 G data_status_2_in [31:0] $end
$var wire 32 H data_status_3 [31:0] $end
$var wire 32 I data_status_3_in [31:0] $end
$var wire 1 J rd_rq $end
$var wire 32 K rif_addr [31:0] $end
$var wire 1 & rif_arst $end
$var wire 1 # rif_clk $end
$var wire 1 L rif_cs $end
$var wire 32 M rif_wdata [31:0] $end
$var wire 1 ; rif_write $end
$var wire 1 N wr_rq $end
$var wire 32 O write_enable_out [31:0] $end
$var wire 1 P rif_ready $end
$var wire 1 + rif_error $end
$var wire 32 Q reg_dec [31:0] $end
$var wire 32 R data_3_out [31:0] $end
$var wire 32 S data_2_out [31:0] $end
$var wire 32 T data_1_out [31:0] $end
$var reg 32 U data_1 [31:0] $end
$var reg 1 V data_1_dec $end
$var reg 32 W data_2 [31:0] $end
$var reg 1 X data_2_dec $end
$var reg 32 Y data_3 [31:0] $end
$var reg 1 Z data_3_dec $end
$var reg 1 [ data_status_1_dec $end
$var reg 1 \ data_status_2_dec $end
$var reg 1 ] data_status_3_dec $end
$var reg 1 ^ error_access $end
$var reg 1 _ error_handler $end
$var reg 32 ` reg_dec_dly [31:0] $end
$var reg 2 a regsistered_request [1:0] $end
$var reg 32 b rif_rdata [31:0] $end
$var reg 32 c write_enable [31:0] $end
$var reg 1 d write_enable_dec $end
$scope begin addres_decoding $end
$upscope $end
$scope begin proc_reg $end
$scope begin reg_decoder $end
$upscope $end
$upscope $end
$scope begin request_reg $end
$upscope $end
$upscope $end
$scope begin proc_error $end
$upscope $end
$scope begin proc_fsm $end
$scope begin idle_state $end
$upscope $end
$scope begin read_phase $end
$upscope $end
$scope begin setup_phase $end
$scope begin count_wait $end
$upscope $end
$scope begin no_count $end
$upscope $end
$upscope $end
$scope begin write_phase $end
$upscope $end
$upscope $end
$scope begin state_change $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0d
bx c
bx b
bx a
b0zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz `
x_
1^
0]
0\
0[
0Z
bx Y
0X
bx W
0V
bx U
bx T
bx S
bx R
b0zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz Q
xP
bx O
xN
bz M
xL
bz K
xJ
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
bx B
bz A
1@
x?
bx >
b0 =
b0 <
x;
bx :
x9
x8
bx 7
b0 6
b0 5
b0 4
x3
bz 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
x+
bx *
z)
bz (
z'
0&
z%
1$
1#
bz "
1!
$end
#1
09
0!
0#
#2
1!
1#
#3
0!
0#
#4
1!
1#
#5
0!
0#
#6
1!
1#
#7
0!
0#
#8
1!
1#
#9
0!
0#
#10
b0 /
b0 R
b0 0
b0 S
b0 1
b0 T
03
b0 Y
b0 W
b0 U
b0 ,
b0 b
1P
b11 a
b0 `
b100000000 C
1!
1&
1#
#11
0!
0#
#12
1!
1#
#13
0!
0#
#14
1!
1#
#15
0!
0&
0#
#16
13
xP
b1x a
b0zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz `
1!
1#
#17
0!
0#
#18
03
bx a
1!
1#
#19
0!
0#
#20
13
1!
1#
#21
0!
0#
#22
03
1!
1#
#23
0!
0#
#24
13
1!
1#
#25
0!
0#
#26
03
1!
1#
#27
0!
0#
#28
13
1!
1#
#29
0!
0#
#30
03
1!
1#
#31
0!
0#
#32
13
1!
1#
#33
0!
0#
#34
03
1!
1#
#35
0!
0#
#36
13
1!
1#
#37
0!
0#
#38
03
1!
1#
#39
0!
0#
#40
13
1!
1#
#41
0!
0#
#42
03
1!
1#
#43
0!
0#
#44
13
1!
1#
#45
0!
0#
#46
03
1!
1#
#47
0!
0#
#48
13
1!
1#
#49
0!
0#
#50
03
1!
1#
#51
0!
0#
#52
13
1!
1#
#53
0!
0#
#54
03
1!
1#
#55
0!
0#
#56
13
1!
1#
#57
0!
0#
#58
03
1!
1#
#59
